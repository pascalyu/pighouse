<h1>raspberry command utls</h1>

<p>raspi-config</p>
<p>sudo apt-get update</p>
<p>sudo apt-get upgrade</p><p></p><p></p>

pour clean
php bin/console cache:clear  
installer phpmyadmin
apt-get install mcrypt
 /etc/init.d/apache2 restart
  apt-get install mysql-server
  
  apt-get install phpmyadmin
  
   mysql --user=root --password=password   
  
   
   winscp pour envoyer fichiers au serveur
   à tester : utiliser git
   
   site accessible depuis serveur local
 
 pour màj lmes js /css
 
    
     yarn run encore dev --watch
     
     poour rajouter specific js à une page
     
     + {% block javascripts %}
+     {{ parent() }}
+     {{ encore_entry_script_tags('checkout') }}
+ {% endblock %}

utiliser à chaque fois qu'on fiat modif js 

yarn run encore dev 


pour ne pas lancer à chaque fois
yarn encore dev --watch

-------------
sql

php bin/console make:entity  -> si existe déjà l'entioty va le modifier (rajouter des champs etc)

php bin/console make:migration -> crée le fichier de migraitobn

 php bin/console doctrine:migrations:migrate -> lance le ficheir de migration ( the last one)
 
 
 php bin/console doctrine:migrations:generate-> genere un truc vide

php bin/console server:dump


____________________
comment fair epour  faire soft delete 
l('idée est de faire getmo (stof)

-il faut faire des commandes pour 

-configurer doctrine.yaml
    parameters:
    # Adds a fallback DATABASE_URL if the env var is not set.
    # This allows you to run cache:warmup even if your
    # environment variables are not available yet.
    # You should not need to change this value.
    env(DATABASE_URL): ''

doctrine:
    dbal:
        # configure these for your database server
        driver: 'pdo_mysql'
        server_version: '5.7'
        charset: utf8mb4
        default_table_options:
            charset: utf8mb4
            collate: utf8mb4_unicode_ci

        url: '%env(resolve:DATABASE_URL)%'
        mapping_types:
             enum: string
             
#    orm:
#        auto_generate_proxy_classes: '%kernel.debug%'
#        naming_strategy: doctrine.orm.naming_strategy.underscore
#        auto_mapping: true
#        mappings:
#            App:
#                is_bundle: false
#                type: annotation
#                dir: '%kernel.project_dir%/src/Entity'
#                prefix: 'App\Entity'
#                alias: App
#            translatable:
#                    type: annotation
#                    alias: Gedmo
#                    prefix: Gedmo\Translatable\Entity
#                    # make sure vendor library location is correct
#                    dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/src/Translatable/Entity"
                    
                    
                    
    orm:
        
            
        auto_generate_proxy_classes: '%kernel.debug%'
#        naming_strategy: doctrine.orm.naming_strategy.underscore
#        auto_mapping: true
        entity_managers:
            default:
                filters:
                    softdeleteable:
                        class: Gedmo\SoftDeleteable\Filter\SoftDeleteableFilter
                        enabled: true
#                connection: default
                naming_strategy: doctrine.orm.naming_strategy.underscore
                auto_mapping: true
                
                mappings:
                    App:
                        is_bundle: false
                        type: annotation
                        dir: '%kernel.project_dir%/src/Entity'
                        prefix: 'App\Entity'
                        alias: App
                    gedmo_translatable:
                        type: annotation
                        prefix: Gedmo\Translatable\Entity
                        dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Translatable/Entity"
                        alias: GedmoTranslatable # (optional) it will default to the name set for the mapping
                        is_bundle: false
                    gedmo_translator:
                        type: annotation
                        prefix: Gedmo\Translator\Entity
                        dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Translator/Entity"
                        alias: GedmoTranslator # (optional) it will default to the name set for the mapping
                        is_bundle: false
                    gedmo_loggable:
                        type: annotation
                        prefix: Gedmo\Loggable\Entity
                        dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Loggable/Entity"
                        alias: GedmoLoggable # (optional) it will default to the name set for the mapping
                        is_bundle: false
                    gedmo_tree:
                        type: annotation
                        prefix: Gedmo\Tree\Entity
                        dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Tree/Entity"
                        alias: GedmoTree # (optional) it will default to the name set for the mapping
                        is_bundle: false

-configurer stof_doctrine_extensions.yaml
     orm:
        default:
            softdeleteable: true
-config/bundle.php
        Stof\DoctrineExtensionsBundle\StofDoctrineExtensionsBundle::class => ['all' => true],
        
        
dans entity faire les annotation (exemple: action)




JSON.parse(data['action_entity'] -(W> permet de transformer objet php en objet js